name: Deploy application

on:
  workflow_dispatch:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  run-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
        ports:
          - "5432:5432"
      mailhog:
        image: mailhog/mailhog:latest
        ports:
          - "1025:1025"
          - "8025:8025"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, mysql, pdo, pdo_mysql
        ini-values: post_max_size=256M, upload_max_filesize=256M
        coverage: none

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Copy .env example
      run: cp .env.example .env

    - name: Run database migrations and seeders
      env:
        APP_ENV: testing
        DB_CONNECTION: pgsql
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DB_DATABASE: test_db
        DB_USERNAME: root
        DB_PASSWORD: root
        FIREBASE_SERVICE_ACCOUNT: "test"
        APP_KEY: testing
      run: |
        vendor/bin/phinx migrate
        vendor/bin/phinx seed:run --seed=MainSeeds
        vendor/bin/phinx seed:run --seed=FcmTokenSeed

    - name: Run PHPUnit tests
      env:
        DB_CONNECTION: pgsql
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DB_DATABASE: test_db
        DB_USERNAME: root
        DB_PASSWORD: root
        MAIL_DRIVER: mailhog
        MAIL_HOST: 127.0.0.1
        MAIL_PORT: 1025
        MAIL_USERNAME: ""
        MAIL_PASSWORD: ""
        MAIL_ENCRYPTION: ""
      run: vendor/bin/phpunit test
      
  deploy_job:
    runs-on: ubuntu-latest
    needs: run-tests
    environment: dev
    name: deploy
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: deploy file
          uses: wlixcc/SFTP-Deploy-Action@v1.2.4
          with:
              username: ${{ secrets.SFTP_USER }} 
              server: ${{ secrets.SFTP_HOST }} 
              ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} 
              password: ${{ secrets.SFTP_PASSWORD }} 
              local_path: '.'
              remote_path: ${{ secrets.SFTP_PATH }}
              sftpArgs: '-o ConnectTimeout=5'

        - name: executing composer install
          uses: appleboy/ssh-action@v1.0.3
          with:
            host: ${{ secrets.SFTP_HOST }}
            username: ${{ secrets.SFTP_USER }}
            password: ${{ secrets.SFTP_PASSWORD }}
            port:  ${{ secrets.SFTP_PORT }}
            script: docker exec budgetcontrol-ms-notifications composer install
  
